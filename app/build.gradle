apply plugin: 'com.android.application'
/**
 * tinker-support.gradle 这个是自己自定义的文件名字，在这引用，
 * 其中tinker-support.gradle 是定义热更新的一些基本配置，这个等级和自己的app的
 * build 位于相同等级
 */
apply from: 'tinker-support.gradle'
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.zxl.studybugly"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 3
        versionName "1.0.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //配置支持的bugly so架构
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    //签名脚本配置
    signingConfigs {
        create("release") {
            //正确填写你的jks文件目录地址
            storeFile file("../config/StudyBugly.jks")
            //签名
            storePassword "121104115"
            //别名标签
            keyAlias "StudyBugly"
            //秘钥
            keyPassword "121104115"
            storeType "jks"
        }
    }

    //编译类型
    buildTypes {
        //正式版本
        release {
            //优化png图片
            crunchPngs true
            //开启资源压缩（先去除无用资源，然后进行资源压缩，条件是混淆必须首先开启，不开启则没用）
            shrinkResources true
            //开启混淆
            minifyEnabled true
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //Zipalign优化
            zipAlignEnabled true
            //配置混淆文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //腾讯bugly热更新
    //multidex 必须配置
    implementation "com.android.support:multidex:1.0.3" // 多dex配置
    //注释掉原有bugly的仓库，这里最好配置指定版本
    //compile 'com.tencent.bugly:crashreport:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.3.4
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.8'

    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.9'

    //如果你的项目中没有引用jni，或者jni不用进行热更新，可以不引用这个依赖
    //implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0

    //这个是自己找的第三方的混淆文件，可以省去几乎所有主流框架的混淆配置，如果没有得自己还是要手动添加
    implementation "com.blankj:free-proguard:1.0.0"

}
